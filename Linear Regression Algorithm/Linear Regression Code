function [fX, fY, slope, intercept, Rsquared] = linearRegression(x,y)
%linearRegression Computes the linear regression of a data set
%   Compute the linear regression based on inputs:
%     1. x: x-values for our data set
%     2. y: y-values for our data set
%
%   Outputs:
%     1. fX: x-values with outliers removed
%     2. fY: y-values with outliers removed
%     3. slope: slope from the linear regression y=mx+b
%     4. intercept: intercept from the linear regression y=mx+b
%     5. Rsquared: R^2, a.k.a. coefficient of determination
if size(x) ~= size(y) 
    error('X and Y need to have the same amount of values')
end

[sortedY, sortOrder] = sort(y);
sortedX = x(sortOrder)
m = length(x)

firstQ = floor((m+1)/4)
thirdQ = floor((3*m+3)/4)

Q1 = sortedY(firstQ)
Q3 = sortedY(thirdQ)
IQR = Q3-Q1

lowT = Q1 - (1.5 * IQR)
highT = Q3 + (1.5 * IQR)
n=length(x)

x2 = x
y2 = y
x= []
y = []

for idx = 1:n
    if y2(idx) >= lowT && y2(idx) <= highT
        x = [x x2(idx)]
        y = [y y2(idx)]
    end
end
n = length(x)

[sortedY, sortOrder] = sort(y);
sortedX = x(sortOrder)
fX = sortedX
fY = sortedY 
y_bar = mean(y);

slope = (n*sum(x.*y)-(sum(x)*sum(y)))/(n*sum(x.^2)-(sum(x))^2);
intercept = y_bar-slope*(mean(x));

SS_tot = sum((y-y_bar).^2);
SS_res = sum((y-(x.*slope+intercept)).^2);
Rsquared = 1-(SS_res/SS_tot);
% Find the median of both x and y values
end
