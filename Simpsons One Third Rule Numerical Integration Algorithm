function [I] = Simpson(x, y)
% Numerical evaluation of integral by Simpson's 1/3 Rule
% Inputs
%   x = the vector of equally spaced independent variable
%   y = the vector of function values with respect to x

%% Check that x and y are same length
if length(x) ~= length(y)
    error('x and y need to be of the same lenght')
end 

%% Check that x has equally spaced data
h = x(2) - x(1);
    for i=3:length(x)
        if (x(i)-x(i-1)) ~= h
            error('x data is not equally spaced');
        end
    end
%% Simpson's 1/3 Rule 
    sum = y(1);
    for i=2:(length(x)-2)
        if rem(i,2)==0
            sum=sum+4*y(i);
        else
            sum=sum+2*y(i);
        end
    end
%% Trapezoid Rule for the last interval if there are an odd amount of data points
    if rem(length(x),2) == 0
        warning('Trapezoid rule will be used on the last interval')
        sum = sum + y(length(x)-1);
        I = (sum*h/3) + ((y(length(x)) + y(length(x)-1))*h/2);
    else
        sum = sum + 4*y(length(x)-1) + y(length(x));
        I=sum*h/3
    end
%% Print the value of the integral
    fprintf('Integral is:')
    

end
